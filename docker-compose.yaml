## --project-name
version: '3.8'
services:
    es-node-01:
      # network_mode: elastic
        container_name: es-node-01
        ports:
            - '9200:9200'
            - '9300:9300'
        environment:
            - discovery.type=single-node
        image: 'docker.elastic.co/elasticsearch/elasticsearch:7.17.0'
        networks:
            - elastic
    kibana-01:
      # network_mode: elastic
        container_name: kibana-01
        ports:
            - '5601:5601'
        environment:
            - ELASTICSEARCH_HOSTS=http://es-node-01:9200
        image: 'docker.elastic.co/kibana/kibana:7.17.0' 
        healthcheck:
            test: ["CMD", "curl", "-f", "kibana-01:5601"]
            interval: 50s
            timeout: 50s
            retries: 5
        depends_on:
            - es-node-01
        networks:
            - elastic 

    # javaApp:
    #     image: 'febbweiss/java-log-generator:latest' 
    #     depends_on:
    #         - es-node-01
    #         - kibana-01
    #     networks:
    #         - elastic 

    # web:
    #     image: flask-web
    #     build: 
    #         dockerfile: flask.dockerfile
    #         context: .
    #     command: python -u to-do-app/app.py
    #     ports:
    #         - "5001:5000"
    #     volumes:
    #         - .:/app
    #     links:
    #         - db
    # db:
    #     image: mongo:latest
    #     hostname: test_mongodb
    #     environment:
    #         - MONGO_INITDB_DATABASE=animal_db
    #         - MONGO_INITDB_ROOT_USERNAME=root
    #         - MONGO_INITDB_ROOT_PASSWORD=pass
    #     ports:
    #         - 27017:27017

    logstash:
        container_name: logstash-01
        volumes:
            - /Users/xuanphuong/Desktop/dockerComposeEKLF/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro 
            - /Users/xuanphuong/Desktop/dockerComposeEKLF/logstash.yaml:/usr/share/logstash/config/logstash.yml:ro 
        image: 'docker.elastic.co/logstash/logstash:7.17.0'
        depends_on:   
             kibana-01:
               condition: service_healthy  
        networks:
            - elastic 


    filebeat:
        user: root
        container_name: filebeat-01
        command: --strict.perms=false
        volumes:
            - /Users/xuanphuong/Desktop/dockerComposeEKLF/filebeat.docker.yaml:/usr/share/filebeat/filebeat.yml:ro
            - /var/lib/docker/containers:/var/lib/docker/containers:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
        #   - /home/lian/ELK/1 Introduction and Installation/dockerComposeJavaApp/data:/usr/share/filebeat/data:rw
        image: 'docker.elastic.co/beats/filebeat:7.17.0' 
        depends_on:   
             kibana-01:
               condition: service_healthy
        networks:
            - elastic  


    php:
        image: simple-php-website-php-apache-environment:latest
        build: 
            context: ./simple-php-website
        ports:
            - '8000:80'
        volumes:
            - ./simple-php-website:/var/www/html/
        networks:
            - elastic  

networks:
  elastic:
    name: elastic      
    external: true